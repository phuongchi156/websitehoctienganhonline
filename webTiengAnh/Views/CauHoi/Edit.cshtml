@model webTiengAnh.Models.entity.CauHoi
@{
    ViewBag.Title = "Sửa câu hỏi";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


<script type="text/javascript">
    function ShowPreview(input) {
        if (input.files && input.files[0]) {
            var ImageDir = new FileReader();
            ImageDir.onload = function (e) {
                $('#impPrev').attr('src', e.target.result)
            }
            ImageDir.readAsDataURL(input.files[0]);
        }
    }
</script>

<div class="x_panel">
    <div class="x_title">
        <h2>Câu hỏi <small>Sửa</small></h2>
        <ul class="nav navbar-right panel_toolbox">
            <li>
                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
            </li>
            <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-wrench"></i></a>
                <ul class="dropdown-menu" role="menu">
                    <li>
                        <a href="#">Settings 1</a>
                    </li>
                    <li>
                        <a href="#">Settings 2</a>
                    </li>
                </ul>
            </li>
            <li>
                <a class="close-link"><i class="fa fa-close"></i></a>
            </li>
        </ul>
        <div class="clearfix"></div>
    </div>

    @using (Html.BeginForm("Edit", "CauHoi", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal x_content">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.MaCH)

            <div class="form-group">
                @Html.LabelFor(model => model.CauHoi1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CauHoi1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CauHoi1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (Model.Picture != null)
                    {
                        <img src="data:image/gif;base64,@Convert.ToBase64String(Model.Picture)" class="img-responsive avatar-view" width="150" id="impPrev" />
                        <input type="file" name="fileim" class="form-control" id="imageupload" accept=".png,.jpg,.gif" onchange="ShowPreview(this)" />
                    }
                    else
                    {
                        <img src="" class="img-thumbnail" id="impPrev" style="height:100px;width:100px;margin:5px" />
                        <input type="file" name="fileim" class="form-control" id="imageupload" accept=".png,.jpg,.gif" onchange="ShowPreview(this)" />
                    }
                    @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.A, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.A, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.A, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.B, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.B, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.B, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.C, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.C, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.C, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.D, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.D, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.D, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DapAn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("DapAn", new List<SelectListItem>
                           {
                               new SelectListItem{ Text = "A", Value = "A"},
                               new SelectListItem{ Text = "B", Value = "B"},
                               new SelectListItem{ Text = "C", Value = "C"},
                               new SelectListItem{ Text = "D", Value = "D"}
                           }, "Chọn đáp án", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DapAn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Lưu" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Quay lại", "Index")
    </div>
</div>

